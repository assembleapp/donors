version: "2.1"

services:
  clock:
    command: bundle exec clockwork util/clock.rb
    image: assemble/web
    links:
      - db
    volumes:
      - .:/app

  db:
    image: postgres:latest
    expose:
      - 5432

  letsencrypt-nginx-proxy-companion:
    restart: always
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: letsencrypt-nginx-proxy-companion
    volumes_from:
      - nginx
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./volumes/proxy/certs:/etc/nginx/certs:rw"
    environment:
      - NGINX_DOCKER_GEN_CONTAINER=nginx-gen

  nginx:
    restart: always
    image: nginx
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/etc/nginx/conf.d"
      - "/etc/nginx/vhost.d"
      - "/usr/share/nginx/html"
      - "./volumes/proxy/certs:/etc/nginx/certs:ro"

  nginx-gen:
    restart: always
    image: jwilder/docker-gen
    container_name: nginx-gen
    volumes:
      - "/var/run/docker.sock:/tmp/docker.sock:ro"
      - "./volumes/proxy/templates/nginx.tmpl:/etc/docker-gen/templates/nginx.tmpl:ro"
    volumes_from:
      - nginx
    entrypoint: /usr/local/bin/docker-gen -notify-sighup nginx -watch -wait 5s:30s /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf

  web:
    build: .
    env_file: .env
    image: assemble/web
    command: ./bin/serve
    ports:
      - 3000:3000
    links:
      - db
    volumes:
      - .:/app
      # Docker access on Linux
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - VIRTUAL_HOST=assembleapp.co
      - VIRTUAL_NETWORK=nginx-proxy
      - VIRTUAL_PORT=3000
      - LETSENCRYPT_HOST=assembleapp.co
      - LETSENCRYPT_EMAIL=wright.grayson@gmail.com

  worker:
    env_file: .env
    image: assemble/web
    command: rake jobs:work
    links:
      - db
    volumes:
      - .:/app
      # Docker access on Linux
      - /var/run/docker.sock:/var/run/docker.sock
